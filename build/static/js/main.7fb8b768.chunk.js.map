{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","COMMENTS_API_URL","Comments","useState","comments","setComments","getComments","a","fetch","res","json","json_res","CommentForm","comment_data","setComment_data","postComment","data","options","method","body","JSON","stringify","useEffect","Object","keys","length","handleClick","event","preventDefault","target","name","value","comment","className","id","onSubmit","type","defaultValue","map","key","index","Date","parse","toLocaleString","navigator","language","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,MAA0B,iC,MCmF1BA,MA/Ef,WAGE,IAAMC,EAAmB,4CAEzB,SAASC,IAAY,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACDC,EADC,KAEZC,EAAW,uCAAG,8BAAAC,EAAA,sEACAC,MAAMP,GADN,cACZQ,EADY,gBAEKA,EAAIC,OAFT,OAEZC,EAFY,OAGlBN,EAAYM,GAHM,2CAAH,qDASjB,SAASC,IAAe,IAAD,EACmBT,mBAAS,IAD5B,mBACdU,EADc,KACAC,EADA,KAEfC,EAAW,uCAAG,WAAOC,GAAP,mBAAAT,EAAA,6DACZU,EAAU,CACdC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,IAHL,SAKAR,MAAMP,EAAkBgB,GALxB,cAKZR,EALY,gBAMKA,EAAIC,OANT,OAMZC,EANY,OAOlBN,EAAYM,GAPM,2CAAH,sDASjBW,qBAAU,WACiC,IAArCC,OAAOC,KAAKX,GAAcY,QAC5BV,EAAYF,KAEb,CAACA,IAEJ,IAAMa,EAAW,uCAAG,WAAOC,GAAP,SAAApB,EAAA,sDAClBoB,EAAMC,iBACNd,EAAgB,CACd,KAAOa,EAAME,OAAOC,KAAKC,MACzB,QAAUJ,EAAME,OAAOG,QAAQD,QAJf,2CAAH,sDAQjB,OACE,qBAAKE,UAAU,cAAf,SACE,uBAAMC,GAAG,cAAcC,SAAUT,EAAjC,UACE,uBAAOO,UAAU,mBAAmBG,KAAK,OAAOF,GAAG,OAAOG,aAAa,SAAe,uBACtF,0BAAUJ,UAAU,sBAAsBC,GAAG,UAAUG,aAAa,YAAqB,uBACzF,uBAAOJ,UAAU,qBAAqBG,KAAK,SAASL,MAAM,cAMlE,OAxCAT,qBAAU,WACRhB,MACC,IAuCD,sBAAK2B,UAAU,WAAf,UACGV,OAAOC,KAAKpB,GAAUkC,KAAI,SAACC,EAAKC,GAAN,OACzB,gCACE,qBAAKP,UAAY,gBAAjB,SAAkC7B,EAASmC,GAAT,OAClC,qBAAKN,UAAW,mBAAhB,SAAoC7B,EAASmC,GAAT,UACpC,qBAAKN,UAAY,wBAAjB,SAA0C,IAAIQ,KAAKA,KAAKC,MAAMtC,EAASmC,GAAT,eAAgCI,eAAeC,UAAUC,cAH/GL,MAMd,cAAC5B,EAAD,OAMJ,OACE,sBAAKqB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKa,IAAKC,EAAMd,UAAU,WAAWe,IAAI,SACzC,2CAEF,cAAC9C,EAAD,QCjES+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fb8b768.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ec4cddd6.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  \n  // const COMMENTS_API_URL = 'http://localhost:5000/comments'\n  const COMMENTS_API_URL = 'https://bagpyp-api.herokuapp.com/comments'\n\n  function Comments() {\n    const [comments, setComments] = useState({})\n    const getComments = async () => {\n      const res = await fetch(COMMENTS_API_URL)\n      const json_res = await res.json()\n      setComments(json_res)\n    }\n    useEffect(() => {\n      getComments()\n    }, [])\n\n    function CommentForm() {\n      const [comment_data, setComment_data] = useState({})\n      const postComment = async (data) => {\n        const options = {\n          method: 'POST',\n          body: JSON.stringify(data)\n        }\n        const res = await fetch(COMMENTS_API_URL, options)\n        const json_res = await res.json()\n        setComments(json_res)\n      }\n      useEffect(() => {\n        if (Object.keys(comment_data).length !== 0) {\n          postComment(comment_data)\n        }\n      }, [comment_data])\n  \n      const handleClick = async (event) => {\n        event.preventDefault()\n        setComment_data({\n          \"name\":event.target.name.value,\n          \"comment\":event.target.comment.value\n        })\n      }\n      \n      return (\n        <div className=\"CommentForm\">\n          <form id=\"commentForm\" onSubmit={handleClick}>\n            <input className=\"CommentForm-name\" type=\"text\" id=\"name\" defaultValue=\"name\"></input><br />\n            <textarea className=\"CommentForm-comment\" id=\"comment\" defaultValue=\"comment\"></textarea><br />\n            <input className=\"CommentForm-submit\" type=\"submit\" value=\"post\"></input>\n          </form>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"Comments\">\n        {Object.keys(comments).map((key, index) => (\n          <div key={index}>\n            <div className = \"Comments-name\">{comments[key][\"name\"]}</ div>\n            <div className =\"Comments-comment\">{comments[key][\"comment\"]}</ div>\n            <div className = \"Comments-created_date\">{new Date(Date.parse(comments[key][\"created_date\"])).toLocaleString(navigator.language)}</div>\n          </div>\n        ))}\n      <CommentForm />\n      </div>\n    );\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>BAGPYP</h1>\n      </header>\n      <Comments />\n      {/* <CommentForm /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}